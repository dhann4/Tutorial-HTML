Specificity yaitu
setiap deklarasi CSS (selector) memiliki "berat" yang berbeda.
Berat tersebut menentukan seberapa spesifik sebuah elemen dapat di pilih oleh
selector

selector mempunyai berat yang berbeda contoh nya
1. element HTML memiliki berat bisa kita anggap 1
2. class kita bisa anggap 10x lipat lebih berat
3. id kita bisa anggap 100x lipat lebih berat

misal nya kita punya element HTML seperti ini

HTML================================================================================

<p>
	Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
	tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
	quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
	consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
	cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
	proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
</p>

CSS=================================================================================

p { color: red; }

p { color: green; }


jika demikian, berarti warna apa yang muncul ?
tentu saja warna hijau, karena p { color: green; } akan menimpa atau mengoveride
p { color: red; } atau properti pertama

jika kita menulisnya

p { color: red; }
p { color: green; }

maka yang akan di ambil adalah properti terakhir atau selector yang paling terakhir

oke untuk yang ini gk ada masalah masih aman.



selanjutnya kita akan kasih id

HTML================================================================================

<p id="p1">
	Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
	tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
	quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
	consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
	cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
	proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
</p>

CSS=================================================================================

#p1 { color: red; }

p { color: green; }

jika demikian, berarti warna apa yang muncul ?
tentu saja warna merah, padahal sebelum nya yang muncul hijau karena warna hijau akan menimpa warna mmerah atau mengoveride, ternyata yang ini tidak warnanya tetap merah.
Kenapa ?
jawaban nya sederhana, karena #p1 lebih spesifik dari p

sekarang kita hitung dengan nilai specificity

oke, anggap saja kita punya koper yang memiliki kunci kode sebanyak 3 digit,
sekarang angka nya kita tambah lagi 1, jadi kunci kodenya sebanyak 4 digit.

sekarang kunci kodenya di mulai dengan angka 0 sebanyak 4x

[0 0 0 0]

lalu kita kasih label, di mulai dari sebelah kanan

[ 0					    0					0					0       ] 
[ 																        ]
[ inline				id					class				element ]


cara menghitung nya adalah
kita lihat selektor yang kita buat
lalu tiap - tiap element HTML yang ada di sana kita tambahkan 1 di bagian element
jika ada class nya kita tambahkan 1 di bagian class
dan jika ada id nya kita tambahkan 1 di bagian id

untuk inline kita kesampingkan dulu

kita lihat apakah ada element nya atau class nya, atau id nya

#p1 = 0 1 0 0

[ 0					    1					0					0       ] 
[ 																        ]
[ inline				id					class				element ]

kita bandingkan dengan

p = 0 0 0 1

[ 0					    0					0					1       ] 
[ 																        ]
[ inline				id					class				element ]

sekarang kita adu, bisa di bayangkan 100 banding 1, tentu saja yang akan menang 100.

karena #p1 ini lebih berat / spesifik maka yang akan di pilih adalah #p1
dan warna yang muncul tadi bukan hijau yang dari p melainkan warna merah dari #p1

jika kita menggunakan inline, maka kita akan mengotori element HTML yang kita punya, jadi tidak di sarankan menggunakan inline



sekarang kita punya HTML begini
HTML================================================================================

<ul id="sarapan">
	<li class="favorit">Nasi Goreng</li>
	<li>Mie Goreng</li>
	<li>Bubur Ayam</li>
	<li>Nasi Kuning</li>
</ul>

CSS=================================================================================

ul#sarapan li {
	color: green;
}

artinya, css tolong carikan saya li yang ada di dalam ul tapi yang punya id sarapan, lalu ubah warnanya menjadi hijau

lalu kita ingin mewarnai makanan favorit kita agar warna nya berbeda dan menandakan bahwa itu adalah makanan favorit kita

.favorit {
	color: red;
}

pertanyaan nya adalah, nasi goreng nya berubah menjadi hijau atau merah ?
ternyata warna nasi gorengnya akan hijau kenapa ? jika kita hitung seperti yang tadi

ul#sarapan li = 0 1 0 2

[ 0					    1					0					2       ] 
[ 																        ]
[ inline				id					class				element ]

kita bandingkan dengan

.favorit = 0 0 1 0

[ 0					    0					1					0       ] 
[ 																        ]
[ inline				id					class				element ]

bisa kita tebak, id lah yang menang maka dari itu warnanya menjadi hijau atau warna yang kita berikan kepada id.

lalu agar warna dari teks nasi goreng tadi tetap menjadi merah bagaimana ?

solusinya adalah kita harus membuat element yang kita inginkan menjadi
lebih spesifik lagi dari yang sebelumnya dengan cara menambahkan beban pada element tersebut agar semakin berat.

jika sebelumnya ul#sarapan li menang, maka kita harus mengganti .favorit jadi selector yang lain tapi mentargetkan element yang sama, jadi kita ganti menjadi ul#sarapan li.favorit

jadi cara bacanya adalah, css tolong carikan saya <li> yang punya class="favorit" dan dia berada di dalam <ul> yang punya id="sarapan"

sekarang score nya berapa ?, kita hitung lagi

ul#sarapan li = 0 1 0 2

[ 0					    1					0					2       ] 
[ 																        ]
[ inline				id					class				element ]

kita bandingkan dengan

ul#sarapan li.favorit = 0 1 1 2

[ 0					    1					1					2       ] 
[ 																        ]
[ inline				id					class				element ]

bisa di tebak, maka yang menang adalah 112 yang merupakan score dari ul#sarapan li.favorit.
Jadi dengan begini maka teks Nasi Goreng tadi akan berubah warnanya menjadi merah

jika kita punya file CSS sendiri ini tidak akan jadi masalah, tapi di internet biasanya kan pasti ada file CSS yang di upload dari orang lain, lalu kita ingin menggunakannya untuk file HTML kita dan di bawah file CSS milik orang tadi kita tambahkan CSS milik kita sendiri, nah biasanya ini sering terjadi kita harus cek lagi, mungkin CSS kita tidak spesifik atau tidak berat dari CSS milik orang lain.
Dan cara mengatasi nya adalah dengan cara - cara yang di atas tadi

jika masih bingung cara menghitung nya, silahkan kunjungi kalkulator specificity di link : http//specificity.keegan.st